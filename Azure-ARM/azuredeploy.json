{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "ProfiseeVersion": {
      "type": "String"
    },
    "ProfiseeAdminUserAccount": {
      "type": "String"
    },
    "ProfiseeLicense": {
      "type": "String"
    },
    "ProfiseeWebAppName": {
      "type": "String"
    },
    "ActiveDirectoryCreateApp": {
      "type": "String"
    },
    "ActiveDirectoryClientId": {
      "defaultValue": "",
      "type": "String"
    },
    "ActiveDirectoryClientSecret": {
      "defaultValue": "",
      "type": "String"
    },
    "UsePurview": {
      "defaultValue": "",
      "type": "String"
    },
    "PurviewUrl": {
      "defaultValue": "",
      "type": "String"
    },
    "PurviewCollectionFriendlyName": {
      "defaultValue": "",
      "type": "String"
    },
    "PurviewClientId": {
      "defaultValue": "",
      "type": "String"
    },
    "PurviewClientSecret": {
      "defaultValue": "",
      "type": "String"
    },
    "PurviewAccountResourceGroup": {
      "defaultValue": "",
      "type": "String"
    },
    "ManagedIdentityName": {
      "type": "object"
    },
    "KubenetesInfrastructureResourceGroupName": {
      "defaultValue": "",
      "type": "String"
    },
    "WindowsNodeVersion":{
      "type": "string"
    },
    "KubernetesClusterName": {
      "type": "String"
    },
    "KubernetesLinuxNodeSize": {
      "type": "String"
    },
    "KubernetesLinuxNodeCount": {
      "type": "int"
    },
    "KubernetesWindowsNodeSize": {
      "type": "String"
    },
    "KubernetesWindowsNodeCount": {
      "type": "int"
    },
    "KubernetesVersion": {
      "defaultValue": "",
      "type": "String"
    },
    "KubernetesVnetName": {
      "defaultValue": "",
      "type": "string"
    },
    "KubernetesVnetResourceGroup": {
      "defaultValue": "",
      "type": "string"
    },
    "KubernetesSubnetName": {
      "defaultValue": "",
      "type": "string"
    },
    "KubernetesServiceCidr": {
      "defaultValue": "",
      "type": "string"
    },
    "KubernetesDNSServiceIP": {
      "defaultValue": "",
      "type": "string"
    },
    "KubernetesDockerBridgeCidr": {
      "defaultValue": "",
      "type": "string"
    },
    "AuthenticationType":{
      "type": "string"
    },
    "SQLServerCreateNew": {
      "type": "String"
    },
    "SQLServerName": {
      "type": "String"
    },
    "SQLServerUser": {
      "type": "string"
    },
    "SQLServerPassword": {
      "type": "securestring"
    },
    "SQLServerDatabaseName": {
      "type": "String"
    },
    "StorageAccountCreateNew": {
      "type": "String"
    },
    "StorageAccountName": {
      "type": "String"
    },
    "StorageAccountType": {
      "type": "String"
    },
    "StorageAccountAccessKey": {
      "defaultValue": "",
      "type": "securestring"
    },
    "StorageAccountFileShareName": {
      "type": "String"
    },
    "DNSUpdate": {
      "type": "String"
    },
    "DNSHostName": {
      "defaultValue": "",
      "type": "String"
    },
    "DNSDomainName": {
      "defaultValue": "",
      "type": "String"
    },
    "DNSDomainResourceGroup": {
      "defaultValue": "",
      "type": "String"
    },
    "HttpsConfigure": {
      "type": "String"
    },
    "HttpsCertificate": {
      "defaultValue": "",
      "type": "String"
    },
    "HttpsCertificatePrivateKey": {
      "defaultValue": "",
      "type": "String"
    },
    "UseLetsEncrypt": {
      "type": "String"
    },
    "UseKeyVault": {
      "type": "String"
    },
    "KeyVault": {
      "defaultValue": "",
      "type": "String"
    },
    "NewGuid": {
      "defaultValue": "[newGuid()]",
      "type": "String"
    }
  },
  "variables":
  {
    "ScriptURL":"https://raw.githubusercontent.com/profisee/kubernetes/master/Azure-ARM/deployprofisee.sh",
    "PreReqCheckScriptURL":"https://raw.githubusercontent.com/profisee/kubernetes/master/Azure-ARM/prereqcheck.sh",
    "KubernetesVnetResourceGroup":"[parameters('KubernetesVnetResourceGroup')]",
    "vnetId":"[resourceId(parameters('KubernetesVnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('KubernetesVnetName'),parameters('KubernetesSubnetName'))]",
    "PROFISEEVERSION":"[parameters('ProfiseeVersion')]",
    "ADMINACCOUNTNAME":"[parameters('ProfiseeAdminUserAccount')]",
    "LICENSEDATA":"[parameters('ProfiseeLicense')]",
    "WEBAPPNAME":"[parameters('ProfiseeWebAppName')]",
    "ACRUSER":"",
    "ACRUSERPASSWORD":"",


    "UPDATEAAD":"[parameters('ActiveDirectoryCreateApp')]",
    "CLIENTID":"[parameters('ActiveDirectoryClientId')]",
    "CLIENTSECRET":"[parameters('ActiveDirectoryClientSecret')]",
    "OIDCURL":"[concat('https://login.microsoftonline.com/',subscription().tenantId)]",

    "KubernetesVersion":"[parameters('KubernetesVersion')]",
    "KubernetesClusterName": "[parameters('KubernetesClusterName')]",

    "KubernetesServiceCidr": "[parameters('KubernetesServiceCidr')]",
    "KubernetesDNSServiceIP": "[parameters('KubernetesDNSServiceIP')]",
    "KubernetesDockerBridgeCidr": "[parameters('KubernetesDockerBridgeCidr')]",
    "KubernetesLinuxNodeCount": "[int(parameters('KubernetesLinuxNodeCount'))]",
    "KubernetesLinuxNodeSize": "[parameters('KubernetesLinuxNodeSize')]",
    "AuthenticationType": "[parameters('AuthenticationType')]",
    "KubernetesWindowsNodeCount": "[int(parameters('KubernetesWindowsNodeCount'))]",
    "KubernetesWindowsNodeSize": "[parameters('KubernetesWindowsNodeSize')]",
    "WindowsNodeVersion": "[parameters('WindowsNodeVersion')]",
    "ManagedIdentity": "[parameters('ManagedIdentityName')]",

    "DNSHostName": "[parameters('DNSHostName')]",
    "DNSDomainName": "[parameters('DNSDomainName')]",
    "ExternalDNSName": "[concat(variables('DNSHostName'),'.',variables('DNSDomainName'))]",
    "ExternalDNSURL":"[if(equals(parameters('HttpsConfigure'),'Yes'), concat('https://',variables('ExternalDNSName')),concat('http://',variables('ExternalDNSName')))]",
    "DOMAINNAMERESOURCEGROUP":"[parameters('DNSDomainResourceGroup')]",
    "DNSUpdate":"[parameters('DNSUpdate')]",

    "SQLServerCreateNew" : "[parameters('SQLServerCreateNew')]",
    "SQLServerName":"[parameters('SQLServerName')]",
    "SQLNAME": "[concat(variables('SQLServerName'),'.database.windows.net')]",
    "SQLServerDatabaseName":"[parameters('SQLServerDatabaseName')]",
    "SQLUSERPASSWORD":"[parameters('SQLServerPassword')]",
    "SQLUSERNAME":"[parameters('SQLServerUser')]",

    "StorageAccountCreateNew" : "[parameters('StorageAccountCreateNew')]",
    "StorageAccountName":"[parameters('StorageAccountName')]",
    "FILEREPOPASSWORD":"[parameters('StorageAccountAccessKey')]",
    "StorageAccountFileShareName":"[parameters('StorageAccountFileShareName')]",
    "StorageAccountType":"[parameters('StorageAccountType')]",


    "CONFIGUREHTTPS":"[parameters('HttpsConfigure')]",
    "TLSCERT":"[parameters('HttpsCertificate')]",
    "TLSKEY":"[parameters('HttpsCertificatePrivateKey')]",

    "USELETSENCRYPT":"[parameters('UseLetsEncrypt')]",
    "KubenetesInfrastructureResourceGroupName":"[if(equals(parameters('KubenetesInfrastructureResourceGroupName'),''), concat('MC_',resourceGroup().name,'_', variables('KubernetesClusterName'), '_',resourceGroup().location),parameters('KubenetesInfrastructureResourceGroupName'))]",

    "UseKeyVault":"[parameters('UseKeyVault')]",
    "KeyVault":"[parameters('KeyVault')]",

    "UsePurview":"[parameters('UsePurview')]",
    "PurviewUrl":"[parameters('PurviewUrl')]",
    "PurviewCollectionId":"[parameters('PurviewCollectionFriendlyName')]",
    "PurviewClientId":"[parameters('PurviewClientId')]",
    "PurviewClientSecret":"[parameters('PurviewClientSecret')]",
    "PurviewAccountResourceGroup":"[parameters('PurviewAccountResourceGroup')]"
  },
    "resources":
    [
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "PreReqChecks",
            "location": "[resourceGroup().location]",
            "kind": "AzureCLI",
            "identity": "[variables('ManagedIdentity')]",
            "properties": {
                "forceUpdateTag": "[parameters('NewGuid')]",
                "azCliVersion": "2.52.0",
                "timeout": "PT1H",
                "cleanupPreference": "OnExpiration",
                "retentionInterval": "P1D",
                "primaryScriptUri": "[variables('PreReqCheckScriptURL')]",
                "environmentVariables": [
                    {
                        "name": "RESOURCEGROUPNAME",
                        "value": "[resourceGroup().name]"
                    },
                    {
                        "name": "SUBSCRIPTIONID",
                        "value": "[subscription().subscriptionId]"
                    },
                    {
                        "name": "TENANTID",
                        "value": "[subscription().tenantId]"
                    },
                    {
                        "name": "DOMAINNAMERESOURCEGROUP",
                        "value": "[variables('DOMAINNAMERESOURCEGROUP')]"
                    },
                    {
                        "name": "UPDATEDNS",
                        "value": "[variables('DNSUpdate')]"
                    },
                    {
                        "name": "DNSDOMAINNAME",
                        "value": "[variables('DNSDomainName')]"
                    },
                    {
                        "name": "UPDATEAAD",
                        "value": "[variables('UPDATEAAD')]"
                    },
                    {
                        "name": "USEKEYVAULT",
                        "value": "[variables('UseKeyVault')]"
                    },
                    {
                        "name": "KEYVAULT",
                        "value": "[variables('KeyVault')]"
                    },
                    {
                        "name": "USEPURVIEW",
                        "value": "[variables('UsePurview')]"
                    },
                    {
                        "name": "PURVIEWURL",
                        "value": "[variables('PurviewUrl')]"
                    },
                    {
                        "name": "PURVIEWCOLLECTIONID",
                        "value": "[variables('PurviewCollectionId')]"
                    },
                    {
                        "name": "PURVIEWCLIENTID",
                        "value": "[variables('PurviewClientId')]"
                    },
                    {
                        "name": "PURVIEWCLIENTSECRET",
                        "value": "[variables('PurviewClientSecret')]"
                    }
                ]
            }
        },
        {
            "apiVersion": "2022-09-01",
            "name": "License",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(tolower(parameters('UseKeyVault')),tolower('Yes'))]",
            "dependsOn": ["[resourceId('Microsoft.Resources/deploymentScripts', 'PreReqChecks')]"],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions":
                {
                "scope": "inner"
                },
                "template":
                    {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ],
                    "parameters": {
                        "LicenseFromVault": {
                        "type": "securestring"
                        }
                        },
                        "outputs": {
                            "ValueInVault": {
                            "value": "[parameters('LicenseFromVault')]",
                            "type": "string"
                            }
                        }
                    },
                "parameters": {
                    "LicenseFromVault": {
                        "reference": {
                        "keyVault": {
                            "id": "[parameters('KeyVault')]"
                        },
                        "secretName": "[parameters('ProfiseeLicense')]"
                        }
                    }
                }
            }
        },

        {
            "apiVersion": "2022-09-01",
            "name": "Sql",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(tolower(parameters('UseKeyVault')),tolower('Yes'))]",
            "dependsOn": ["[resourceId('Microsoft.Resources/deploymentScripts', 'PreReqChecks')]"],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions":
                {
                "scope": "inner"
                },
                "template":
                    {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                        "condition": "[equals(tolower(parameters('SQLServerCreateNew')),tolower('Yes'))]",
                        "name": "[tolower(parameters('SQLServerName'))]",
                        "type": "Microsoft.Sql/servers",
                        "location": "[resourceGroup().location]",
                        "apiVersion": "2022-05-01-preview",
                        "dependsOn": [],
                        "tags": {
                            "displayName": "SQLServer"
                        },
                        "properties": {
                            "administratorLogin": "[if(equals(tolower(parameters('UseKeyVault')),tolower('Yes')),parameters('SQLServerUserFromVault'),parameters('SQLServerUser'))]",
                            "administratorLoginPassword": "[if(equals(tolower(parameters('UseKeyVault')),tolower('Yes')),parameters('SQLServerPasswordFromVault'),parameters('SQLServerPassword'))]"
                        },
                        "resources": [
                            {
                                "condition": "[equals(tolower(parameters('SQLServerCreateNew')),tolower('Yes'))]",
                                "name": "AllowAllWindowsAzureIps",
                                "type": "firewallrules",
                                "location": "[resourceGroup().location]",
                                "apiVersion": "2022-05-01-preview",
                                "dependsOn": [
                                    "[concat('Microsoft.Sql/servers/', tolower(parameters('SQLServerName')))]"
                                ],
                                "properties": {
                                    "startIpAddress": "0.0.0.0",
                                    "endIpAddress": "0.0.0.0"
                                }
                            },
                            {
                            "condition": "[equals(tolower(parameters('SQLServerCreateNew')),tolower('Yes'))]",
                            "type": "databases",
                            "apiVersion": "2022-05-01-preview",
                            "name": "[parameters('SQLServerDatabaseName')]",
                            "location": "[resourceGroup().location]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Sql/servers', concat(parameters('SQLServerName')))]"
                            ]
                            }
                        ]
                    }
                    ],
                    "parameters": {
                        "UseKeyVault": {
                        "type": "string"
                        },
                        "SQLServerUser": {
                        "type": "string"
                        },
                        "SQLServerPassword": {
                        "type": "string"
                        },
                        "SQLServerUserFromVault": {
                        "type": "securestring"
                        },
                        "SQLServerPasswordFromVault": {
                        "type": "securestring"
                        },
                        "SQLServerCreateNew": {
                        "type": "string"
                        },
                        "SQLServerName": {
                        "type": "string"
                        },
                        "SQLServerDatabaseName": {
                        "type": "string"
                        }
                        }
                    },
                "parameters": {
                    "SQLServerCreateNew":{
                        "value":"[variables('SQLServerCreateNew')]"
                    },
                    "SQLServerDatabaseName":{
                        "value":"[variables('SQLServerDatabaseName')]"
                    },
                    "SQLServerName":{
                        "value":"[variables('SQLServerName')]"
                    },
                    "UseKeyVault":{
                        "value":"[parameters('UseKeyVault')]"
                    },
                    "SQLServerUser":{
                        "value":"[variables('SQLServerName')]"
                    },
                    "SQLServerPassword":{
                        "value":"[parameters('SQLServerPassword')]"
                    },
                    "SQLServerUserFromVault": {
                        "reference": {
                        "keyVault": {
                            "id": "[parameters('KeyVault')]"
                        },
                        "secretName": "[parameters('SQLServerUser')]"
                        }
                    },
                    "SQLServerPasswordFromVault": {
                        "reference": {
                        "keyVault": {
                            "id": "[parameters('KeyVault')]"
                        },
                        "secretName": "[parameters('SQLServerPassword')]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2023-05-02-preview",
            "name": "[variables('KubernetesClusterName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": ["[resourceId('Microsoft.Resources/deploymentScripts', 'PreReqChecks')]"],
            "sku": {
                "name": "Base",
                "tier": "Free"
            },
            "properties": {
                "kubernetesVersion": "[variables('KubernetesVersion')]",
                "dnsPrefix": "profisee",
                "agentPoolProfiles": [
                    {
                        "name": "nplinux1",
                        "count": "[variables('KubernetesLinuxNodeCount')]",
                        "vmSize": "[variables('KubernetesLinuxNodeSize')]",
                        "osDiskSizeGB": 100,
                        "maxPods": 30,
                        "type": "VirtualMachineScaleSets",
                        "orchestratorVersion": "[variables('KubernetesVersion')]",
                        "enableNodePublicIP": false,
                        "nodeLabels": {},
                        "mode": "System",
                        "osSKU": "Ubuntu",
                        "osType": "Linux",
                        "vnetSubnetID": "[if(not(empty(variables('KubernetesVnetResourceGroup'))),variables('vnetId'),json('null'))]"
                    },
                    {
                        "name": "npwin1",
                        "count": "[variables('KubernetesWindowsNodeCount')]",
                        "vmSize": "[variables('KubernetesWindowsNodeSize')]",
                        "osDiskSizeGB": 100,
                        "maxPods": 30,
                        "type": "VirtualMachineScaleSets",
                        "orchestratorVersion": "[variables('KubernetesVersion')]",
                        "enableNodePublicIP": false,
                        "mode": "User",
                        "osSKU": "[variables('WindowsNodeVersion')]",
                        "osType": "Windows",
                        "vnetSubnetID": "[if(not(empty(variables('KubernetesVnetResourceGroup'))),variables('vnetId'),json('null'))]"
                    }
                ],
                "nodeResourceGroup": "[variables('KubenetesInfrastructureResourceGroupName')]",
                "enableRBAC": true,
                "networkProfile": {
                    "networkPlugin": "azure",
                    "loadBalancerSku": "Standard",
                    "outboundType": "loadBalancer",
                    "serviceCidr": "[variables('KubernetesServiceCidr')]",
                    "dnsServiceIP": "[variables('KubernetesDNSServiceIP')]"
                }
            },
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "condition": "[and(equals(tolower(parameters('SQLServerCreateNew')),tolower('Yes')),equals(tolower(parameters('UseKeyVault')),tolower('No')))]",
            "name": "[tolower(parameters('SQLServerName'))]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2022-05-01-preview",
            "dependsOn": ["[resourceId('Microsoft.Resources/deploymentScripts', 'PreReqChecks')]"],
            "tags": {
                "displayName": "SQLServer"
            },
            "properties": {
                "administratorLogin": "[parameters('SQLServerUser')]",
                "administratorLoginPassword": "[parameters('SQLServerPassword')]"
            },
            "resources": [
                {
                    "condition": "[and(equals(tolower(parameters('SQLServerCreateNew')),tolower('Yes')),equals(tolower(parameters('UseKeyVault')),tolower('No')))]",
                    "name": "AllowAllWindowsAzureIps",
                    "type": "firewallrules",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2022-05-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', tolower(parameters('SQLServerName')))]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                },
                {
                "condition": "[and(equals(tolower(parameters('SQLServerCreateNew')),tolower('Yes')),equals(tolower(parameters('UseKeyVault')),tolower('No')))]",
                "type": "databases",
                "apiVersion": "2022-05-01-preview",
                "name": "[parameters('SQLServerDatabaseName')]",
                "location": "[resourceGroup().location]",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers', concat(parameters('SQLServerName')))]"
                ]
                }
            ]
        },
        {
            "condition": "[equals(tolower(variables('StorageAccountCreateNew')),tolower('Yes'))]",
            "name": "[tolower(variables('StorageAccountName'))]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2022-09-01",
            "dependsOn": ["[resourceId('Microsoft.Resources/deploymentScripts', 'PreReqChecks')]"],
            "tags": {
                "displayName": "[variables('StorageAccountName')]"
            },
            "sku": {
                "name": "[variables('StorageAccountType')]"
            },
            "kind": "StorageV2"
        },
        {
            "condition": "[equals(tolower(variables('StorageAccountCreateNew')),tolower('Yes'))]",
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2022-09-01",
            "name": "[concat(tolower(variables('StorageAccountName')), '/default/', tolower(variables('StorageAccountFileShareName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deploymentScripts', 'PreReqChecks')]",
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccountName')))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "InstallProfiseePlatform",
            "location": "[resourceGroup().location]",
            "kind": "AzureCLI",
            "dependsOn": [
                    "[resourceId('Microsoft.Resources/deploymentScripts', 'PreReqChecks')]",
                    "[resourceId('Microsoft.ContainerService/managedClusters', variables('KubernetesClusterName'))]"
                ],
            "identity": "[variables('ManagedIdentity')]",
            "properties": {
                "forceUpdateTag": "1",
                "azCliVersion": "2.52.0",
                "timeout": "PT1H",
                "cleanupPreference": "OnExpiration",
                "retentionInterval": "P1D",
                "environmentVariables": [
                    {
                        "name": "RESOURCEGROUPNAME",
                        "value": "[resourceGroup().name]"
                    },
                    {
                        "name": "CLUSTERNAME",
                        "value": "[variables('KubernetesClusterName')]"
                    },
                    {
                        "name": "SQLNAME",
                        "value": "[variables('SQLNAME')]"
                    },
                    {
                        "name": "SQLUSERNAME",
                        "value": "[variables('SQLUSERNAME')]"
                    },
                    {
                        "name": "SQLUSERPASSWORD",
                        "value": "[variables('SQLUSERPASSWORD')]"
                    },
                    {
                        "name": "SQLDBNAME",
                        "value": "[variables('SQLServerDatabaseName')]"
                    },
                    {
                        "name": "STORAGEACCOUNTNAME",
                        "value": "[variables('STORAGEACCOUNTNAME')]"
                    },
                    {
                        "name": "STORAGEACCOUNTFILESHARENAME",
                        "value": "[variables('StorageAccountFileShareName')]"
                    },
                    {
                        "name": "ADMINACCOUNTNAME",
                        "value": "[variables('ADMINACCOUNTNAME')]"
                    },
                    {
                        "name": "DNSHOSTNAME",
                        "value": "[variables('DNSHostName')]"
                    },
                    {
                        "name": "DNSDOMAINNAME",
                        "value": "[variables('DNSDomainName')]"
                    },
                    {
                        "name": "DOMAINNAMERESOURCEGROUP",
                        "value": "[variables('DOMAINNAMERESOURCEGROUP')]"
                    },
                    {
                        "name": "UPDATEDNS",
                        "value": "[variables('DNSUpdate')]"
                    },
                    {
                        "name": "EXTERNALDNSNAME",
                        "value": "[variables('ExternalDNSName')]"
                    },
                    {
                        "name": "EXTERNALDNSURL",
                        "value": "[variables('ExternalDNSURL')]"
                    },
                    {
                        "name": "OIDCURL",
                        "value": "[variables('OIDCURL')]"
                    },
                    {
                        "name": "LICENSEDATA",
                        "value": "[if(equals(parameters('UseKeyVault'),'Yes'), reference('License').outputs.valueInVault.value,variables('LICENSEDATA'))]"
                    },
                     {
                        "name": "LICENSEDATASECRETNAME",
                        "value": "[if(equals(parameters('UseKeyVault'),'Yes'), variables('LICENSEDATA'),'')]"
                    },
                    {
                        "name": "ACRUSER",
                        "value": "[variables('ACRUSER')]"
                    },
                    {
                        "name": "ACRUSERPASSWORD",
                        "value": "[variables('ACRUSERPASSWORD')]"
                    },
                    {
                        "name": "TLSCERT",
                        "value": "[variables('TLSCERT')]"
                    },
                    {
                        "name": "TLSKEY",
                        "value": "[variables('TLSKEY')]"
                    },
                    {
                        "name": "PROFISEEVERSION",
                        "value": "[variables('PROFISEEVERSION')]"
                    },
                    {
                        "name": "UPDATEAAD",
                        "value": "[variables('UPDATEAAD')]"
                    },
                    {
                        "name": "CLIENTID",
                        "value": "[variables('CLIENTID')]"
                    },
                    {
                        "name": "CLIENTSECRET",
                        "value": "[variables('CLIENTSECRET')]"
                    },
                    {
                        "name": "CONFIGUREHTTPS",
                        "value": "[variables('CONFIGUREHTTPS')]"
                    }
                    ,
                    {
                        "name": "FILEREPOPASSWORD",
                        "value": "[variables('FILEREPOPASSWORD')]"
                    }
                    ,
                    {
                        "name": "USELETSENCRYPT",
                        "value": "[variables('USELETSENCRYPT')]"
                    },
                    {
                        "name": "AKSINFRARESOURCEGROUPNAME",
                        "value": "[variables('KubenetesInfrastructureResourceGroupName')]"
                    },
                    {
                        "name": "SQLSERVERCREATENEW",
                        "value": "[variables('SQLServerCreateNew')]"
                    },
                    {
                        "name": "USEKEYVAULT",
                        "value": "[variables('UseKeyVault')]"
                    },
                    {
                        "name": "KEYVAULT",
                        "value": "[variables('KeyVault')]"
                    },
                    {
                        "name": "SUBSCRIPTIONID",
                        "value": "[subscription().subscriptionId]"
                    },
                    {
                        "name": "TENANTID",
                        "value": "[subscription().tenantId]"
                    },
                    {
                      "name": "KUBERNETESCLIENTID",
                      "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('KubernetesClusterName'))).identityProfile.kubeletidentity.clientId]"
                    },
                    {
                      "name": "KUBERNETESOBJECTID",
                      "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('KubernetesClusterName'))).identityProfile.kubeletidentity.objectId]"
                    },
                    {
                      "name": "USEPURVIEW",
                      "value": "[variables('UsePurview')]"
                    },
                    {
                        "name": "PURVIEWURL",
                        "value": "[variables('PurviewUrl')]"
                    },
                    {
                        "name": "PURVIEWCOLLECTIONID",
                        "value": "[variables('PurviewCollectionId')]"
                    },
                    {
                        "name": "PURVIEWCLIENTID",
                        "value": "[variables('PurviewClientId')]"
                    },
                    {
                      "name": "PURVIEWCLIENTSECRET",
                      "value": "[variables('PurviewClientSecret')]"
                    },
                    {
                      "name": "PURVIEWACCOUNTRESOURCEGROUP",
                      "value": "[variables('PurviewAccountResourceGroup')]"
                    },
                    {
                      "name": "AUTHENTICATIONTYPE",
                      "value": "[variables('AuthenticationType')]"
                    },
                    {
                      "name": "WINDOWSNODEVERSION",
                      "value": "[variables('WindowsNodeVersion')]"
                    },
                    {
                      "name": "WEBAPPNAME",
                      "value": "[variables('WEBAPPNAME')]"
                    }
                ],
                "primaryScriptUri": "[variables('ScriptURL')]"
            }
        },
        {
            "apiVersion": "2022-09-01",
            "name": "pid-498552cf-87f5-55b7-a69b-5364df5c1994",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": ["[resourceId('Microsoft.Resources/deploymentScripts', 'PreReqChecks')]"],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        }
    ],
    "outputs":
    {
    "PreReqChecks": {
      "value": "[reference('PreReqChecks').outputs]",
      "type": "object"
    },
    "ClusterIP": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[0].IP]",
      "type": "string"
    },
    "ProfiseeWebPortalURL": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[1].WEBURL]",
      "type": "string"
    },
    "FileRepoUserName": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[2].FILEREPOUSERNAME]",
      "type": "string"
    },
    "FileRepoUrl": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[3].FILEREPOURL]",
      "type": "string"
    },
    "AzureAppRegistrationClientIdReplyUrl": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[4].AZUREAPPCLIENTID]",
      "type": "string"
    },
    "AzureAppRegistrationReplyUrl": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[5].AZUREAPPREPLYURL]",
      "type": "string"
    },
    "SqlServer": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[6].SQLSERVER]",
      "type": "string"
    },
    "SqlDatabase": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[7].SQLDATABASE]",
      "type": "string"
    },
    "ARCRepoName": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[8].ACRREPONAME]",
      "type": "string"
    },
    "ACRRepoLabel": {
      "value": "[reference('InstallProfiseePlatform').outputs.Result[9].ACRREPOLABEL]",
      "type": "string"
    },
    "KubernetesClusterFQDN": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('KubernetesClusterName'))).FQDN]"
        },
    "KubernetesClusterIdentityClientId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('KubernetesClusterName'))).identityProfile.kubeletidentity.clientId]"
        },
    "InstallProfiseePlatformOutputs": {
      "value": "[reference('InstallProfiseePlatform').outputs]",
      "type": "object"
    }
  }
}
